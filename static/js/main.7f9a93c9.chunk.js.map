{"version":3,"sources":["CountryDisplay.js","Sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["CountryDisplay","props","showCountry","bind","state","countryData","countryCode","a","fetch","this","apiResponse","json","setState","className","subregion","id","name","src","flag","alt","capital","population","toLocaleString","languages","map","lang","join","currencies","currency","timezones","replaceAll","React","Component","Sidebar","countryList","displayCountry","displayAlphabet","alpha2code","document","getElementById","style","backgroundImage","backgroundSize","letter","country","i","type","alpha2Code","value","onMouseEnter","changeBtnOnEnter","onMouseLeave","changeBtnOnLeave","onClick","handleClick","alphabet","newDiv","length","push","App","useState","setCountryCode","displayData","setDisplayData","e","countryCodePassed","target","useEffect","empty","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7f9a93c9.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nclass CountryDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      countryData: null,\n      countryCode: this.props.countryCode,\n    };\n  }\n\n  showCountry = this.showCountry.bind(this);\n\n  async componentDidMount() {\n    const apiResponse = await fetch(\n      `https://restcountries.eu/rest/v2/alpha/${this.state.countryCode}?fields=name;capital;population;flag;languages;currencies;subregion;timezones`\n    );\n    const countryData = await apiResponse.json();\n\n    this.setState({ countryData });\n  }\n\n  showCountry() {\n    if (!this.state.countryData) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <section className=\"main\">\n          <h4>\n            <span className=\"label\">{this.state.countryData.subregion}</span>\n          </h4>\n          <h1>\n            <span id=\"name\">{this.state.countryData.name}</span>\n          </h1>\n          <img\n            className=\"flag\"\n            src={this.state.countryData.flag}\n            alt=\"Flag\"\n          ></img>\n          <h3>\n            <span className=\"label\">Capital:</span>{\" \"}\n            {`${this.state.countryData.capital}`}\n          </h3>\n          <h3>\n            <span className=\"label\">Population:</span>{\" \"}\n            {`${this.state.countryData.population.toLocaleString(\"en-US\")}`}\n          </h3>\n          <h3>\n            <span className=\"label\">Language:</span>{\" \"}\n            {this.state.countryData.languages\n              .map((lang) => {\n                return lang.name;\n              })\n              .join(\", \")}\n          </h3>\n          <h3>\n            <span className=\"label\">Currency:</span>{\" \"}\n            {this.state.countryData.currencies\n              .map((currency) => {\n                return currency.name;\n              })\n              .join(\", \")}\n          </h3>\n          <h3>\n            <span className=\"label\">Timezone:</span>{\" \"}\n            {this.state.countryData.timezones\n              .toLocaleString(\"en-US\")\n              .replaceAll(\",\", \", \")}\n          </h3>\n        </section>\n      );\n    }\n  }\n\n  render() {\n    return this.showCountry();\n  }\n}\n\nexport default CountryDisplay;\n","import React from \"react\";\nimport \"./App.css\";\n\nclass Sidebar extends React.Component {\n  state = {\n    countryList: null,\n  };\n\n  async componentDidMount() {\n    const apiResponse = await fetch(\n      \"https://restcountries.eu/rest/v2/all?fields=name;alpha2Code;flag\"\n    );\n    const countryList = await apiResponse.json();\n    this.setState({ countryList });\n  }\n  displayCountry = this.displayCountry.bind(this);\n  displayAlphabet = this.displayAlphabet.bind(this);\n\n  changeBtnOnEnter(alpha2code, flag) {\n    document.getElementById(\n      alpha2code\n    ).style.backgroundImage = `url('${flag}')`;\n    document.getElementById(alpha2code).style.backgroundSize = `contain`;\n  }\n\n  changeBtnOnLeave(alpha2code) {\n    document.getElementById(alpha2code).style.backgroundImage = `none`;\n  }\n\n  displayCountry(letter) {\n    if (!this.state.countryList) {\n      return <div>Loading...</div>;\n    } else {\n      const countryEl = this.state.countryList.map((country, i) => {\n        if (country.name[0] === letter) {\n          return (\n            <input\n              type=\"button\"\n              className=\"country-btn\"\n              id={country.alpha2Code}\n              key={country.alpha2Code}\n              value={country.name}\n              onMouseEnter={() => {\n                this.changeBtnOnEnter(country.alpha2Code, country.flag);\n              }}\n              onMouseLeave={() => this.changeBtnOnLeave(country.alpha2Code)}\n              onClick={this.props.handleClick}\n            ></input>\n          );\n        }\n        return null;\n      });\n      return countryEl;\n    }\n  }\n\n  displayAlphabet() {\n    const alphabet = [\n      \"A\",\n      \"B\",\n      \"C\",\n      \"D\",\n      \"E\",\n      \"F\",\n      \"G\",\n      \"H\",\n      \"I\",\n      \"J\",\n      \"K\",\n      \"L\",\n      \"M\",\n      \"N\",\n      \"O\",\n      \"P\",\n      \"Q\",\n      \"R\",\n      \"S\",\n      \"T\",\n      \"U\",\n      \"V\",\n      \"W\",\n      // \"X\",\n      \"Y\",\n      \"Z\",\n    ];\n\n    if (!this.state.countryList) {\n      return <div>Loading...</div>;\n    } else {\n      let newDiv = [];\n      for (let i = 0; i < alphabet.length; i++) {\n        newDiv.push(\n          <div\n            className=\"countries\"\n            key={`${alphabet[i]}-countries`}\n            id={alphabet[i]}\n          >\n            <h2 id=\"letter\">{alphabet[i]}</h2>\n            <div id=\"scroll-btns\">{this.displayCountry(alphabet[i])}</div>\n          </div>\n        );\n      }\n      return newDiv;\n    }\n  }\n\n  render() {\n    return (\n      <nav className=\"sidebar\">\n        <h1 id=\"select\">Select a country</h1>\n        <div className=\"scroll\">{this.displayAlphabet()}</div>\n      </nav>\n    );\n  }\n}\n\nexport default Sidebar;\n","import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport CountryDisplay from \"./CountryDisplay\";\nimport Sidebar from \"./Sidebar\";\n\nfunction App() {\n  const [countryCode, setCountryCode] = useState(\"\");\n  const [displayData, setDisplayData] = useState([]);\n\n  async function handleClick(e) {\n    const countryCodePassed = e.target.id;\n    setCountryCode(countryCodePassed);\n  }\n\n  useEffect(() => {\n    if (countryCode.length > 0) {\n      const empty = []; //Berkan named this\n      empty.push(\n        <CountryDisplay key={countryCode} countryCode={countryCode} />\n      );\n      setDisplayData(empty);\n    }\n  }, [countryCode]); //LOOK INTO THIS\n\n  return (\n    <div className=\"App\">\n      <Sidebar handleClick={handleClick} />\n      {displayData}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}